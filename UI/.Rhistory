translationTable <- read.csv(file.path(appPath,'localisation.csv'))
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
masterViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='masterViewPath'])
# translation csv
translationTable <- read.table(file.path(appPath,'localisation.txt'))
translationTable <- read.table(file.path(appPath,'localisation.txt'))
translationTable <- read.table(file.path(appPath,'localisation.txt'),sep='\t')
View(translationTable)
View(configDict)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
masterViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='masterViewPath'])
localDBPath <- file.path(appPath,'local.sqlite')
# connect to masterView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = masterViewPath)
productInfos <- dbReadTable(conn,"productInfo")
dbDisconnect(conn)
# read localisation file
connl <- dbConnect(sqlite.driver, dbname = localDBPath)
localisation <- dbReadTable(connl,"localisation")
dbDisconnect(connl)
View(localisation)
appLang <- configDict$Value[configDict$Name=='language']
appLang
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='language']
appLang
appLang
localisation <- localisation[localisation$lang==appLang]
localisation
runApp()
runApp()
# This file can be placed anywhere, but need the invenageConf.csv to work
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='language']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
masterViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='masterViewPath'])
localDBPath <- file.path(appPath,'local.sqlite')
# connect to masterView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = masterViewPath)
productInfos <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang]
# This file can be placed anywhere, but need the invenageConf.csv to work
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='language']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
masterViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='masterViewPath'])
runApp()
coreDBPath
dbDisconnect(conn)
conn <- dbConnect(sqlite.driver, dbname = 'coreDBPath')
productInfos <- dbReadTable(conn,"productInfo")
dbDisconnect(conn)
# This file can be placed anywhere, but need the invenageConf.csv to work
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='language']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
# connect to masterView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = coreDBPath)
productInfos <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang]
View(localisation)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='language']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
# connect to masterView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = coreDBPath)
productInfos <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
dbDisconnect(conn)
View(localisation)
localisation[localisation$lang==appLang]
localisation <- localisation[localisation$lang==appLang,]
View(localisation)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
# Invenage server.R
source("global.R",local = F)
# This file can be placed anywhere, but need the invenageConf.csv to work
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
invViewPath
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
# connect to invView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
productInfos <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
Inventory <- dbReadTable(conn,"Inventory")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang,]
runApp()
# This file can be placed anywhere, but need the invenageConf.csv to work
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
# connect to invView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
productInfos <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
Inventory <- dbReadTable(conn,"Inventory")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang,]
appLang
runApp()
View(productInfos)
runApp()
View(productInfos)
invViewPath
runApp()
runApp()
# This file can be placed anywhere, but need the invenageConf.csv to work
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
# connect to invView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
productInfo <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
Inventory <- dbReadTable(conn,"Inventory")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang,]
# This file can be placed anywhere, but need the invenageConf.csv to work
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
# connect to invView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
productInfo <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
Inventory <- dbReadTable(conn,"Inventory")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang,]
View(localisation)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
localisation
runApp()
runApp()
runApp()
invViewPath
runApp()
runApp()
runApp()
runApp()
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
tmpPXK <- dbReadTable(conn,"tmpPXK")
dbDisconnect(conn)
currentPXK <- tmpPXK[tmpPXK$completionCode==0]
View(currentPXK)
runApp()
runApp()
runApp()
runApp()
View(tmpPXK)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
localisation$actual[localisation$label=='lastEntry'])
(localisation$actual[localisation$label=='lastEntry'])
runApp()
(localisation$actual[localisation$label=='currentPXK'])
# This file can be placed anywhere, but need the invenageConf.csv to work
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
# connect to invView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
productInfo <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
Inventory <- dbReadTable(conn,"Inventory")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang,]
View(localisation)
# This file can be placed anywhere, but need the invenageConf.csv to work
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
# connect to invView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
productInfo <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
Inventory <- dbReadTable(conn,"Inventory")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang,]
View(localisation)
(localisation$actual[localisation$label=='currentPXK'])
runApp()
runApp()
runApp()
runApp()
(file.exists(invViewPath))
# This file can be placed anywhere, but need the invenageConf.csv to work
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
# set the UIType based on what we found
if (file.exists(invViewPath)){
UIType = 'inventoryStaff'
}
# connect to invView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
productInfo <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
Inventory <- dbReadTable(conn,"Inventory")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang,]
(file.exists(invViewPath))
UIType
runApp()
runApp()
tmpPXK
runApp()
runApp()
# This file can be placed anywhere, but need the invenageConf.csv to work
library(RSQLite)
library(shiny)
library(shinydashboard)
# --------------------- Configure Basic Information ----------------------------
# check the configuration file
if (file.exists(file.path(path.expand('~'),'invenageConf.csv'))){
configDict <- read.csv(file.path(path.expand('~'),'invenageConf.csv'),
stringsAsFactors = F)
}else{
stop('softanageConf.csv not found!')
}
companyName <- configDict$Value[configDict$Name=='companyName']
appLang <- configDict$Value[configDict$Name=='appLang']
appPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='appPath'])
coreDBPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='coreDBPath'])
invViewPath <- file.path(path.expand('~'),
configDict$Value[configDict$Name=='invViewPath'])
# set the UIType based on what we found
UIType = ''
if (file.exists(invViewPath)){
UIType = 'inventoryStaff'
}
# connect to invView database
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
productInfo <- dbReadTable(conn,"productInfo")
localisation <- dbReadTable(conn,"localisation")
Inventory <- dbReadTable(conn,"Inventory")
customerInfo <- dbReadTable(conn,"customerInfo")
dbDisconnect(conn)
# use the configured language
localisation <- localisation[localisation$lang==appLang,]
View(customerInfo)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sqlite.driver <- dbDriver("SQLite")
conn <- dbConnect(sqlite.driver, dbname = invViewPath)
tmpPXK <- dbReadTable(conn,"tmpPXK")
dbDisconnect(conn)
currentPXK <- tmpPXK[tmpPXK$completionCode==0,]
View(currentPXK)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
